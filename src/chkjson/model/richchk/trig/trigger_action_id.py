"""Represent the action byte of each trigger."""

from enum import Enum


class TriggerActionId(Enum):
    NO_ACTION = (0, "NO_ACTION")
    VICTORY = (1, "VICTORY")
    DEFEAT = (2, "DEFEAT")
    PRESERVE_TRIGGER = (3, "PRESERVE_TRIGGER")
    WAIT = (4, "WAIT")
    PAUSE_GAME = (5, "PAUSE_GAME")
    UNPAUSE_GAME = (6, "UNPAUSE_GAME")
    TRANSMISSION = (7, "TRANSMISSION")
    PLAY_WAV = (8, "PLAY_WAV")
    DISPLAY_TEXT_MESSAGE = (9, "DISPLAY_TEXT_MESSAGE")
    CENTER_VIEW = (10, "CENTER_VIEW")
    CREATE_UNIT_WITH_PROPERTIES = (11, "CREATE_UNIT_WITH_PROPERTIES")
    SET_MISSION_OBJECTIVES = (12, "SET_MISSION_OBJECTIVES")
    SET_SWITCH = (13, "SET_SWITCH")
    SET_COUNTDOWN_TIMER = (14, "SET_COUNTDOWN_TIMER")
    RUN_AI_SCRIPT = (15, "RUN_AI_SCRIPT")
    RUN_AI_SCRIPT_AT_LOCATION = (16, "RUN_AI_SCRIPT_AT_LOCATION")
    LEADER_BOARD_CONTROL = (17, "LEADER_BOARD_CONTROL")
    LEADER_BOARD_CONTROL_AT_LOCATION = (18, "LEADER_BOARD_CONTROL_AT_LOCATION")
    LEADER_BOARD_RESOURCES = (19, "LEADER_BOARD_RESOURCES")
    LEADER_BOARD_KILLS = (20, "LEADER_BOARD_KILLS")
    LEADER_BOARD_POINTS = (21, "LEADER_BOARD_POINTS")
    KILL_UNIT = (22, "KILL_UNIT")
    KILL_UNIT_AT_LOCATION = (23, "KILL_UNIT_AT_LOCATION")
    REMOVE_UNIT = (24, "REMOVE_UNIT")
    REMOVE_UNIT_AT_LOCATION = (25, "REMOVE_UNIT_AT_LOCATION")
    SET_RESOURCES = (26, "SET_RESOURCES")
    SET_SCORE = (27, "SET_SCORE")
    MINIMAP_PING = (28, "MINIMAP_PING")
    TALKING_PORTRAIT = (29, "TALKING_PORTRAIT")
    MUTE_UNIT_SPEECH = (30, "MUTE_UNIT_SPEECH")
    UNMUTE_UNIT_SPEECH = (31, "UNMUTE_UNIT_SPEECH")
    LEADERBOARD_COMPUTER_PLAYERS = (32, "LEADERBOARD_COMPUTER_PLAYERS")
    LEADERBOARD_GOAL_CONTROL = (33, "LEADERBOARD_GOAL_CONTROL")
    LEADERBOARD_GOAL_CONTROL_AT_LOCATION = (34, "LEADERBOARD_GOAL_CONTROL_AT_LOCATION")
    LEADERBOARD_GOAL_RESOURCES = (35, "LEADERBOARD_GOAL_RESOURCES")
    LEADERBOARD_GOAL_KILLS = (36, "LEADERBOARD_GOAL_KILLS")
    LEADERBOARD_GOAL_POINTS = (37, "LEADERBOARD_GOAL_POINTS")
    MOVE_LOCATION = (38, "MOVE_LOCATION")
    MOVE_UNIT = (39, "MOVE_UNIT")
    LEADERBOARD_GREED = (40, "LEADERBOARD_GREED")
    SET_NEXT_SCENARIO = (41, "SET_NEXT_SCENARIO")
    SET_DOODAD_STATE = (42, "SET_DOODAD_STATE")
    SET_INVINCIBILITY = (43, "SET_INVINCIBILITY")
    CREATE_UNIT = (44, "CREATE_UNIT")
    SET_DEATHS = (45, "SET_DEATHS")
    ORDER = (46, "ORDER")
    COMMENT = (47, "COMMENT")
    GIVE_UNITS_TO_PLAYER = (48, "GIVE_UNITS_TO_PLAYER")
    MODIFY_UNIT_HIT_POINTS = (49, "MODIFY_UNIT_HIT_POINTS")
    MODIFY_UNIT_ENERGY = (50, "MODIFY_UNIT_ENERGY")
    MODIFY_UNIT_SHIELD_POINTS = (51, "MODIFY_UNIT_SHIELD_POINTS")
    MODIFY_UNIT_RESOURCE_AMOUNT = (52, "MODIFY_UNIT_RESOURCE_AMOUNT")
    MODIFY_UNIT_HANGER_COUNT = (53, "MODIFY_UNIT_HANGER_COUNT")
    PAUSE_TIMER = (54, "PAUSE_TIMER")
    UNPAUSE_TIMER = (55, "UNPAUSE_TIMER")
    DRAW = (56, "DRAW")
    SET_ALLIANCE_STATUS = (57, "SET_ALLIANCE_STATUS")
    DISABLE_DEBUG_MODE = (58, "DISABLE_DEBUG_MODE")
    ENABLE_DEBUG_MODE = (59, "ENABLE_DEBUG_MODE")

    def __init__(self, id_: int, name: str):
        self._id = id_
        self._name = name

    @property
    def id(self) -> int:
        return self._id

    @property
    def name(self) -> str:
        return self._name

    @classmethod
    def get_by_id(cls, id_: int) -> "TriggerActionId":
        return {e.id: e for e in TriggerActionId}[id_]

    @classmethod
    def get_by_name(cls, name: str) -> "TriggerActionId":
        return {e.name: e for e in TriggerActionId}[name]

    @classmethod
    def contains(cls, id_: int) -> bool:
        return id_ in {e.id: e for e in TriggerActionId}
